openapi: 3.0.0
info:
  title: WasaText API
  description: API semplice per la piattaforma di messaggistica WASAText
  version: 1.0.0
tags:
  - name: login
    description: Operazioni di autenticazione
  - name: user
    description: Operazioni sugli utenti
  - name: conversation
    description: Operazioni sulle conversazioni
  - name: message
    description: Operazioni sui messaggi
  - name: group
    description: Operazioni sui gruppi

security:
  - bearerAuth: []

paths:
  /session:
    post:
      security: []
      tags: ["login"]
      summary: Login utente
      description: |
        Se l'utente non esiste viene creato, altrimenti viene restituito l'id.
      operationId: doLogin
      requestBody:
        description: Dati utente
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Mario
                  minLength: 3
                  maxLength: 16
        required: true
      responses:
        '201':
          description: Login effettuato
          content:
            application/json:
              schema:
                type: object
                properties:
                  identifier:
                    type: integer
                    example: 1

  /users/{userId}/username:
    parameters:
      - $ref: "#/components/parameters/userId"
    put:
      tags: [user]
      summary: Cambia username
      description: Cambia lo username se non gi√† usato.
      operationId: setMyUserName
      requestBody:
        description: Nuovo username
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  minLength: 3
                  maxLength: 16
        required: true
      responses:
        '200':
          description: Username cambiato
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: integer
                  newUsername:
                    type: string
        '400':
          description: Username non valido o gi√† usato
        '404':
          description: Utente non trovato
        '500':
          description: Errore server

  /users/{userId}/conversations/:
    parameters:
      - $ref: "#/components/parameters/userId"
    get:
      tags: [conversation]
      summary: Prendi le conversazioni dell'utente
      operationId: getMyConversations
      parameters:
        - $ref: "#/components/parameters/sort"
      responses:
        '200':
          description: Lista conversazioni
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Conversation"
        '500':
          description: Errore server
    put:
      tags: [conversation]
      summary: Crea nuova conversazione
      operationId: addConversation
      requestBody:
        description: Dati nuova conversazione
        content:
          application/json:
            schema:
              type: object
              properties:
                targetUsername:
                  type: string
                type:
                  type: string
                  enum: [group, direct]
        required: true
      responses:
        '204':
          description: Conversazione creata
        '400':
          description: Dati non validi
        '500':
          description: Errore server

  /users/{userId}/conversations/{conversationId}:
    parameters:
      - $ref: "#/components/parameters/userId"
      - $ref: "#/components/parameters/conversationId"
    get:
      tags:
        - conversation
      summary: Dettagli conversazione
      description: Restituisce tutti i messaggi di una conversazione.
      operationId: getConversation
      parameters:
        - $ref: "#/components/parameters/sort"
      responses:
        '200':
          description: Dettagli conversazione
          content:
            application/json:
              schema:
                type: object
                properties:
                  conversationId:
                    type: integer
                    example: 1
                  messages:
                    type: array
                    items:
                      $ref: "#/components/schemas/Message"
        '404':
          description: Conversazione non trovata
        '500':
          description: Errore server

  /users/{userId}/conversations/{conversationId}/messages/:
    parameters:
      - $ref: "#/components/parameters/userId"
      - $ref: "#/components/parameters/conversationId"
    post:
      tags:
        - message
      summary: Invia un messaggio
      description: Invia un nuovo messaggio in una conversazione.
      operationId: sendMessage
      requestBody:
        description: Dettagli messaggio
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  oneOf:
                    - $ref: '#/components/schemas/Text'
                    - $ref: '#/components/schemas/Photo'
        required: true
      responses:
        "201":
          description: Messaggio inviato
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
        '400':
          description: Contenuto messaggio non valido
        '404':
          description: Conversazione non trovata
        '500':
          description: Errore server

  /users/{userId}/conversations/{conversationId}/messages/{messageId}/forwardMessage:
    parameters:
      - $ref: "#/components/parameters/userId"
      - $ref: "#/components/parameters/conversationId"
      - $ref: "#/components/parameters/messageId"
    post:
      tags:
        - message
      summary: Inoltra un messaggio
      description: Inoltra un messaggio esistente a un'altra conversazione.
      operationId: forwardMessage
      requestBody:
        description: ID conversazione di destinazione
        content:
          application/json:
            schema:
              type: object
              properties:
                conversationId:
                  type: integer
                  example: 1
        required: true
      responses:
        "201":
          description: Messaggio inoltrato
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
        '400':
          description: ID conversazione o messaggio non valido
        '404':
          description: Conversazione o messaggio originale non trovato
        '500':
          description: Errore server

  /users/{userId}/conversations/{conversationId}/messages/{messageId}/replyMessage:
    parameters:
      - $ref: "#/components/parameters/userId"
      - $ref: "#/components/parameters/conversationId"
      - $ref: "#/components/parameters/messageId"
    post:
      tags:
        - message
      summary: Rispondi a un messaggio
      description: Crea un nuovo messaggio in risposta a un messaggio esistente.
      operationId: replyMessage
      requestBody:
        description: Dettagli messaggio di risposta
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  oneOf:
                    - $ref: '#/components/schemas/Text'
                    - $ref: '#/components/schemas/Photo'
        required: true
      responses:
        "201":
          description: Risposta inviata
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
        '400':
          description: Dati non validi
        '404':
          description: Messaggio o conversazione non trovati
        '500':
          description: Errore server

  /users/{userId}/conversations/{conversationId}/messages/{messageId}/comments/:
    parameters:
      - $ref: "#/components/parameters/userId"
      - $ref: "#/components/parameters/conversationId"
      - $ref: "#/components/parameters/messageId"
    put:
      tags:
        - message
      summary: Aggiungi commento a un messaggio
      description: Aggiungi una reazione o commento a un messaggio in una conversazione.
      operationId: commentMessage
      requestBody:
        description: Dettagli commento
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  example: "üëç"
        required: true
      responses:
        '200':
          description: Commento aggiunto
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '400':
          description: Formato commento non valido
        '404':
          description: Messaggio o conversazione non trovati
        '500':
          description: Errore server

  /users/{userId}/conversations/{conversationId}/messages/{messageId}/comments/{commentId}:
    parameters:
      - $ref: "#/components/parameters/userId"
      - $ref: "#/components/parameters/conversationId"
      - $ref: "#/components/parameters/messageId"
      - $ref: "#/components/parameters/commentId"
    delete:
      tags:
        - message
      summary: Rimuovi commento da un messaggio
      description: Rimuovi un commento specifico da un messaggio in una conversazione.
      operationId: uncommentMessage
      responses:
        "204":
          description: Commento rimosso
        '400':
          description: ID messaggio o commento non valido
        '404':
          description: Messaggio, conversazione o commento non trovati
        '500':
          description: Errore server

  /users/{userId}/conversations/{conversationId}/messages/{messageId}:
    parameters:
      - $ref: "#/components/parameters/userId"
      - $ref: "#/components/parameters/conversationId"
      - $ref: "#/components/parameters/messageId"
    delete:
      tags:
        - message
      summary: Elimina un messaggio
      description: Elimina un messaggio specifico da una conversazione.
      operationId: deleteMessage
      responses:
        "204":
          description: Messaggio eliminato
        '400':
          description: ID messaggio o conversazione non valido
        '404':
          description: Messaggio o conversazione non trovati
        '500':
          description: Errore server

  /users/{userId}/groups/{groupId}/members/:
    parameters:
      - $ref: "#/components/parameters/userId"
      - $ref: "#/components/parameters/groupId"
    put:
      tags:
        - group
      summary: Aggiungi utente a un gruppo
      description: Aggiungi un altro utente a un gruppo esistente.
      operationId: addToGroup
      requestBody:
        description: Utente da aggiungere al gruppo
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        '204':
          description: Utente aggiunto
        '400':
          description: ID gruppo o utente non valido
        '404':
          description: Gruppo o utente non trovato
        '500':
          description: Errore server

    get:
      tags:
        - group
      summary: Prendi membri del gruppo
      description: Restituisce una lista di membri di un gruppo.
      operationId: getGroupMembers
      responses:
        '200':
          description: Lista membri del gruppo
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Username"
        '404':
          description: Gruppo non trovato
        '500':
          description: Errore server


  /users/{userId}/groups/{groupId}/members/me:
    parameters:
      - $ref: "#/components/parameters/userId"
      - $ref: "#/components/parameters/groupId"
    delete:
      tags:
        - group
      summary: Lascia un gruppo
      description: Permette a un utente di lasciare un gruppo.
      operationId: leaveGroup
      responses:
        "204":
          description: Utente rimosso dal gruppo
        '400':
          description: ID gruppo non valido
        '404':
          description: Gruppo non trovato
        '500':
          description: Errore server
  
  /users/{userId}/groups/{groupId}/name:
    parameters:
    - $ref: "#/components/parameters/userId"
    - $ref: "#/components/parameters/groupId"
    put:
      tags:
        - group
      summary: Imposta nome gruppo
      description: Cambia il nome di un gruppo esistente.
      operationId: setGroupName
      requestBody:
        description: Nuovo nome gruppo
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "gruppo123"
                  minLength: 3
                  maxLength: 16
        required: true
      responses:
        '200':
          description: Nome gruppo aggiornato
          content:
            application/json:
              schema:
                type: object
                properties:
                  groupId:
                    $ref: "#/components/schemas/GroupId"
                  newName:
                    type: string
        '400':
          description: Nome gruppo non valido
        '404':
          description: Gruppo non trovato
        '500':
          description: Errore server
  
  /users/{userId}/photo:
    parameters:
      - $ref: "#/components/parameters/userId"
    put:
      tags:
        - user
      summary: Imposta foto profilo
      description: Aggiorna la foto profilo dell'utente.
      operationId: setMyPhoto
      requestBody:
        description: File foto da caricare
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Photo'
        required: true
      responses:
        '200':
          description: Foto profilo aggiornata
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    $ref: '#/components/schemas/UserId'
                  photo:
                    $ref: '#/components/schemas/Photo'
        '400':
          description: Foto non valida
        '404':
          description: Utente non trovato
        '500':
          description: Errore server
          
  /users/{userId}/search:
    parameters:
      - $ref: "#/components/parameters/userId"
    get:
      tags:
        - user
      summary: Cerca utenti per username
      description: Cerca altri utenti per username.
      operationId: searchUsers
      parameters:
        - name: username
          in: query
          description: Username da cercare.
          required: true
          schema:
            $ref: '#/components/schemas/Username'
      responses:
        '200':
          description: Lista utenti trovati
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Username'
        '400':
          description: Query di ricerca non valida
        '404':
          description: Utente non trovato
        '500':
          description: Errore server
  
  /users/{userId}/groups/{groupId}/photo:
    parameters:
      - $ref: "#/components/parameters/userId"
      - $ref: "#/components/parameters/groupId"
    put:
      tags:
        - group
      summary: Imposta foto gruppo
      description: Cambia la foto di un gruppo esistente.
      operationId: setGroupPhoto
      requestBody:
        description: File foto da caricare
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Photo'
        required: true
      responses:
        '200':
          description: Foto gruppo aggiornata
          content:
            application/json:
              schema:
                type: object
                properties:
                  groupId:
                    description: Identificatore unico del gruppo.
                    type: integer
                    example: 1
                  photoUrl:
                    $ref: '#/components/schemas/Photo'
        '400':
          description: Foto non valida
        '404':
          description: Gruppo non trovato
        '500':
          description: Errore server
  
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  
  schemas:
    Message:
      title: Message
      description: "Rappresenta un singolo messaggio."
      type: object
      properties:
        id:
          description: Identificatore unico del messaggio.
          type: integer
          example: 1
          readOnly: true
        timestamp: 
          type: string
          format: date-time
          description: Timestamp di invio del messaggio.
          example: "2023-11-05T14:30:00Z"
        content:
          description: Contenuto del messaggio.
          oneOf:
            - $ref: '#/components/schemas/Text'
            - $ref: '#/components/schemas/Photo'
        sender:
          $ref: '#/components/schemas/User'
        status:
          type: string
          enum: ["received", "read"]
          description: Stato del messaggio
          example: "read"
        commments:
          type: array
          minItems: 0
          maxItems: 500
          description: Lista di commenti sul messaggio
          items:
            $ref: '#/components/schemas/Comment'
        type:
          description: Tipo di messaggio
          type: string
          enum: ["standard", "forward", "reply"]
          example: "standard"
        replyToMessageId:
          type: integer
          description: ID del messaggio a cui si sta rispondendo.
          example: 12
              
    Comment:
      title: Comment
      description: "Rappresenta un singolo commento."
      type: object
      properties:
        commentId:
          description: Identificatore unico del commento.
          type: integer
          example: 1
          readOnly: true
        sender:
          $ref: '#/components/schemas/User'
        content:
          type: string
          description: Il commento come emoji
          example: "üëç"
          pattern: '^.*?$'
          minLength: 1
          maxLength: 2
          
    Conversation:
      title: Conversation
      description: "Rappresenta una singola conversazione."
      type: object
      properties:
        conversationId:
          description: Identificatore unico della conversazione.
          type: integer
          example: 1
          readOnly: true
        name:
          description: Nome dell'utente o del gruppo.
          type: string
          example: "conversazione123"
          minLength: 3
          maxLength: 16
          pattern: "^.*?$"
        photo:
          $ref: '#/components/schemas/Photo'
        lastMessage:
          description: Dettagli dell'ultimo messaggio della conversazione.
          type: object
          properties:
            messageId:
              description: Identificatore unico del messaggio.
              type: integer
              example: 1
              readOnly: true
            timestamp: 
              type: string
              format: date-time
              description: Timestamp di invio del messaggio.
              example: "2023-11-05T14:30:00Z"
            preveiew:
              description: Contenuto dell'ultimo messaggio.
              oneOf:
                - $ref: '#/components/schemas/Text'
                - $ref: '#/components/schemas/Photo'
        type:
          description: Tipo di conversazione
          type: string
          enum: ["group", "direct"]
          example: "group"
    
    User:
      title: User
      description: "Rappresenta un singolo utente."
      type: object
      properties:
        userId:
          $ref: '#/components/schemas/UserId'
        username:
          $ref: '#/components/schemas/Username'
    
    Photo:
      description: Dati immagine codificati in Base64
      type: string
      format: byte
      pattern: "^[01]+$"
      minLength: 0
      maxLength: 9999999999999999999
      
    Username:
      description: Username dell'utente.
      type: string
      example: "user123"
      minLength: 3
      maxLength: 16
      pattern: "^.*?$"
      
    UserId:
      description: Identificatore unico dell'utente
      type: integer
      example: 1
      readOnly: true
      
    GroupId:
      description: Identificatore unico del gruppo
      type: integer
      example: 1
      readOnly: true
      
    Text:
      type: string
      description: Contenuto testuale del messaggio
      example: "Ciao, come stai?"
      minLength: 1
      maxLength: 500
      pattern: '^.*?$'
      
      
  parameters:
    userId:
      schema:
        $ref: '#/components/schemas/UserId'
      name: userId
      in: path
      required: true
      description: ID utente
      
    conversationId:
      schema:
        type: integer
        example: 1
        readOnly: true
        description: "Identificatore unico della conversazione."
      name: conversationId
      in: path
      required: true
      description: ID conversazione
      
    messageId:
      schema:
        type: integer
        example: 1
        readOnly: true
        description: "Identificatore unico del messaggio."
      name: messageId
      in: path
      required: true
      description: ID messaggio
      
    commentId:
      schema:
        type: integer
        example: 1
        readOnly: true
        description: "Identificatore unico del commento."
      name: commentId
      in: path
      required: true
      description: ID commento
      
    groupId:
      schema:
        type: integer
        example: 1
        readOnly: true
        description: "Identificatore unico del gruppo."
      name: groupId
      in: path
      required: true
      description: ID gruppo
      
    sort:
      schema:
        type: string
        enum: [asc, desc]
        description: "Definisce l'ordine di sort dei messaggi."
      name: sort
      in: query
      required: true
      description: "Ordina per timestamp dell'ultimo messaggio. Usa 'desc' per ordine cronologico inverso, o 'asc' per ordine cronologico."
      
  responses:
    UnauthorizedError:
      description: Token di accesso mancante o non valido
      
    InternalServerError:
      description: Errore interno del server
